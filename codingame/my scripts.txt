####Python3####
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#output the number of most repeated letters 
ex:ip=hexxxa 
op=3

$$$$$$$$$$$$$$ Code $$$$$$$$$$$$$$$$$$$$$$$$

import collections as c
w=input().replace(" ", "")
print((c.Counter(w).most_common(1)[0])[1])

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#print even indexces of a list then print the reverse 
ex:
ip=H!edllldor oW
op=Hello World!

$$$$$$$$$$ Code $$$$$$$$$$$$$$

s=input()
x=[]
for i in s:
	x.append(s)
for i in range(0,len(s),2):
	print(x[i],end="")
	x[i]=""
for i in reversed(range(len(x))):
	print(x[i],end="")

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#Height and remaining of a piramid

################################# todo #############################################
ex: 
n=11 
op
1
11
111
1111

op=4 1
where 4=height of the piramid and 1=remaining digits

$$$$$$$$$$$$$$$$$$$$$$$$$ code 50% $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

n = 11
x=0
r=0
y=[]
fr=[]
for i in range(n):
    for j in range(i):
        y.append(1)
        x+=1
        if x>=n:
            break
    fr.append(y)
    y=[]
    if x>=n:
        break
    r+=1
for i in range(len(fr)):
    if fr[i]==1:
        t=0
    else:
        fr.pop(i)
print(fr)

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#sum of integers in a given range in a list 
ex
n=4
x=4 5 2 8
m=3

s,e (start, end range)
0 3
1 2
3 3

op=19 7 8

$$$$$$$$$$$$$$$$$$$$$$$$$$ Code $$$$$$$$$$$$$$$$$$$$$$$$$$$$

n=int(input())

r=[]

l=0

for i in input().split():

    x=int(i)

    r.append(x)

m=int(input())

for i in range(m):

    s,e=[int(j) for j in input().split()]

    for j in range(s,e+1):

        l+=r[j]

    print(l)

    l=0
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#Christmas tree (try at "http://www.tutorialspoint.com/execute_python3_online.php" to see o/p)

ip=4
op
....*....
...***...
..*****..
.*******.
....*....

$$$$$$$$$$$$$$$$$$$$ Code $$$$$$$$$$$$$$$$$$$$$$$$$$$$

n=int(input())

t=n

x=0

for i in range(1,n+1):

    print ('.'*(t)+'*'*(i+x)+'.'*(t))

    t-=1

    x+=1

print('.'*(n)+'*'+'.'*(n),end="")

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

print the num of strings given after a number 
ex:
1a2b = abb,
3a2b = aaabb

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ Code $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

import re

s=input()

p=r"[0-9]"

pa=r"[A-Za-z]"

c=[]

n=[]

n=re.sub(pa," ",s).split()

c=re.sub(p," ",s).split()

for i,j in zip(n,c):

    print(j*int(i),end="")

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#ip = 11 op=1 1 2 2 3 4 4 4 5 6 7 a(n) = a(a(n - 1)) + a(n - a(n - 1)), for n > 2.

##################todo#############################

No Possible soln yet

###################################################

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#if two strings are anagram or not below outputs 1

$$$$$$$$$$$$$$$$$$$$$$$$$$$$ Code $$$$$$$$$$$$$$$$$$$$$$$$$$$$

from collections import Counter
s1="string"
s2="gnirts"
if Counter(s1)==Counter(s2):
	print(1)
else:
	print(0)

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#factorial and number of zeroes in the fact ex:ip=5 fact=120 op=1
######################## todo ################################

nosoln yet

##############################################################

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#if a string is happy or unhappy happy if 
^^^^^^^^^^^^^^^^^^^^^^ Formulas ^^^^^^^^^^^^^^^^^^^^^^^^^

S(86) = 8^2 + 6^2 = 64 + 36 = 100 
S(100) = 1^2 + 0^2 + 0^2 = 1 

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

ex:
ip=404 
op=IS HAPPY

$$$$$$$$$$$$$$$$$$$$ Code $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

n=input()

d=n
def s(x):

    r=0

    for y in str(x):

        r+=(int(y)**2)

    return str(r)

while(not(len(d)==1)):

    d=s(d)
if d=='1':

    print(str(n)+" "+"IS HAPPY")

else:

    print(str(n)+" "+"IS UNHAPPY")

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#We have a motorcycle race on a straight track of length L meters. Assume that the race starts at point (0,0) of a 2-D coordinate system and ends at (L,0). Then the referee would be positioned at point (R,H) or (R, -H).

The race organizers need to choose a referee who will be able to see the whole road, end-to-end. What would be the minimal sight distance D requirement for a hire-able referee?

##############do not work just 50%###################
l=5
r=2
h=4
r=[l,r,h]
print(max(r))
#####################################################

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#invert a color code 

ip=#000000 
op=#FFFFFF

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ Code $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

c=(input().split('#'))[1]
d={'0':'F','1':'E','2':'D','3':'C','4':'B','5':'A','6':'9','7':'8','8':'7','9':'6','A':'5','B':'4','C':'3','D':'2','E':'1','F':'0'}
print('#',end="")
for i in c:
	print(d[i],end="")

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#birthday paradox (probability no of people having birthdays on the same day assuming no of days=365 and no one has his bday on 29th)

ip
2
op
1

ip
10
op
12

############################ todo #########################

no possible soln yet

###########################################################


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

ip=5
op=
-5
0.2
-0.2
-5 =rev of ip 0.2 is inverse -0.2 is reverse of inv

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ Code $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

n=int(input())

if n>0:

    print(-n)

    print(1/n)

    print(-(1/n))

elif n==0:

    print(0)

    print('error')

    print('error')

else:

    print(-n)

    print(-(1/n))

    print(-(-(1/n)))



$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


#convert from binary string to hex

ip
1010
op
0xa

$$$$$$$$$$$$$$$$$$$$ Code $$$$$$$$$$$$$$$$$$$

n=(input().split('0b'))[1]
print(hex(int(n,2)))

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#ip= 1 1 op=1 ip=2 1 op= 1 1 ip=5 2 op= 2 2 1 ip=1000 op=67 67 67 67 67 67 67 67 67 67 67 67 67 67 62

################################# todo ######################

no possible soln yet

#############################################################

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#You program must output the smallest prime factor of N.
ip
15
op
3
ip
2015
op
5
ip
5111
op
19
ip
0
op
NONE

$$$$$$$$$$$$$$$$$$$$ Code $$$$$$$$$$$$$$$$$$$$$$

n=int(input())

r=[]

for x in range(2,n+1):

    if n%x==0:

        r.append(x)

print('NONE' if n<=2 else min(r))

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@




####Java######




####C lang####




####c++#######




####ruby######




####(C#)######




####bash######




####JavaScript#





####Clojure####





####Dart#######





####Lua#########






####Haskell#####






####PHP##########








####Swift########






####Scala########






####VB.NET#######