uquu
@n = gets.to_i
t=gets.split.map(&:to_i)
@k = gets.to_i
$<.map{|w|
    w=w.split.map(&:to_i)
    puts w.map{|box|
        s=box
        a=1
        while t[s-1]!=box
            s=t[s-1]
            a+=1
        end
        a
    }*" "
}

java marty wallace

import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Solution {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        String space = "";
        int N = in.nextInt();
        int [] boxes = new int[N];
        for (int i = 0; i < N; i++) {
            boxes[i] = in.nextInt();
        }
        int K = in.nextInt();
        for (int i = 0; i < K; i++) {
            int box = in.nextInt();
            
            int plate = box;
            int count = 0;
            do{
                count++;
                plate = boxes[plate-1];
            }while(plate != box);
            
            System.out.print(space + count);
            space = " ";
        }
        System.out.println();

    }
}